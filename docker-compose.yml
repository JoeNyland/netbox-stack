---
services:
  netbox: &netbox
    image: netboxcommunity/netbox:${NETBOX_VERSION:-latest}
    container_name: netbox
    user: "unit:root"
    restart: unless-stopped
    depends_on:
      - postgres
      - redis
    networks:
      default:
      proxy:
    expose:
      - 8080
    environment:
      ALLOWED_HOSTS: ${ALLOWED_HOSTS:-netbox}
      DB_HOST: ${POSTGRES_HOST:-postgres}
      DB_NAME: ${POSTGRES_DB:-netbox}
      DB_USER: ${POSTGRES_USER:-netbox}
      DB_PASSWORD: ${POSTGRES_PASSWORD:?postgres password is required}
      EMAIL_SERVER: ${EMAIL_SERVER:-localhost}
      EMAIL_PORT: ${EMAIL_PORT:-25}
      EMAIL_FROM: ${EMAIL_FROM:-}
      EMAIL_USERNAME: ${EMAIL_USERNAME:-}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD:-}
      EMAIL_USE_SSL: ${EMAIL_USE_SSL:-false}
      EMAIL_USE_TLS: ${EMAIL_USE_TLS:-false}
      REDIS_HOST: ${REDIS_HOST:-redis}
      REDIS_CACHE_HOST: ${REDIS_CACHE_HOST:-redis}
      SECRET_KEY: ${SECRET_KEY:?netbox secret key is required}
      TIME_ZONE: ${TIME_ZONE:-UTC}
      HOUSEKEEPING_INTERVAL: ${HOUSEKEEPING_INTERVAL:-86400}
      MEDIA_ROOT: ${MEDIA_ROOT:-/opt/netbox/netbox/media}
      METRICS_ENABLED: ${METRICS_ENABLED:-false}
      RELEASE_CHECK_URL: https://api.github.com/repos/netbox-community/netbox/releases
      SKIP_SUPERUSER: true
    healthcheck:
      test: curl -f http://localhost:8080/login/ || exit 1
      start_period: 90s
      timeout: 3s
      interval: 15s
    labels:
      traefik.enable: true
      traefik.http.routers.netbox.rule: Host(`netbox`)
    volumes:
      - /containers/netbox/config:/etc/netbox/config:z,ro
      - /containers/netbox/media:/opt/netbox/netbox/media
      - /containers/netbox/reports:/opt/netbox/netbox/reports
      - /containers/netbox/scripts:/opt/netbox/netbox/scripts
  netbox-worker:
    <<: *netbox
    container_name: netbox-worker
    depends_on:
      netbox:
        condition: service_healthy
    command:
      - /opt/netbox/venv/bin/python
      - /opt/netbox/netbox/manage.py
      - rqworker
    healthcheck:
      test: ps -aux | grep -v grep | grep -q rqworker || exit 1
      start_period: 20s
      timeout: 3s
      interval: 15s
    labels: {} # Redefine the labels to remove those from the netbox service
  netbox-housekeeping:
    <<: *netbox
    container_name: netbox-housekeeping
    depends_on:
      netbox:
        condition: service_healthy
    command:
      - /opt/netbox/housekeeping.sh
    healthcheck:
      test: ps -aux | grep -v grep | grep -q housekeeping || exit 1
      start_period: 20s
      timeout: 3s
      interval: 15s
    labels: {} # Redefine the labels to remove those from the netbox service

  postgres:
    image: postgres:17-alpine
    container_name: netbox-db
    restart: unless-stopped
    healthcheck:
      test: pg_isready -q -t 2 -d $$POSTGRES_DB -U $$POSTGRES_USER
      start_period: 20s
      timeout: 30s
      interval: 10s
      retries: 5
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-netbox}
      POSTGRES_USER: ${POSTGRES_USER:-netbox}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?postgres password is required}
    volumes:
      - /containers/netbox/db:/var/lib/postgresql/data

  redis:
    image: valkey/valkey:8.0-alpine
    container_name: netbox-redis
    restart: unless-stopped
    healthcheck:
      test: '[ $$(valkey-cli ping) = ''PONG'' ]'
      start_period: 5s
      timeout: 3s
      interval: 1s
      retries: 5
    volumes:
      - /containers/netbox/cache:/data

networks:
  default:
    enable_ipv6: true
  proxy:
    external: true
